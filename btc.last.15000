{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 151,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "SQL:1 <--test\n",
      "Fri Nov 15 21:35:43 2019\n",
      "Limit= 150000\n",
      "SQL:0\n",
      "0 1BW8BGkbbQjfRXMkYsSsbetNgmMz5GEoCi 0431c183fd4e0335be52b500e7e6365a7074ea9a7a067c6f9f60f1d7054ac33c610dd11de26e1c191c7c8861013581732a18087bbbfb5236b4a36e5b5f2cb9967d\n",
      "f6d8154d8146527c1893beac1b214bfb7e805173f49e02443441f6a1acc5b085\n",
      "Fri Nov 15 22:28:18 2019\n"
     ]
    }
   ],
   "source": [
    "from bitcoin import * \n",
    "import sqlite3\n",
    "import time\n",
    "from hashlib import sha256\n",
    "import base58g \n",
    "\n",
    "def wif(pri): #=input()  #\"0C28FCA386C7A227600B2FE50B7CAE11EC86D3BF1FBE471BE89827E19D72AA1D\"\n",
    "  a0=\"80\"+pri   #+\"01\"         #bytes(priv,encoding='ascii')\n",
    "#print(a0)\n",
    "  a1=bytearray.fromhex(a0)\n",
    "#print(a1)\n",
    "  dig = sha256(sha256(a1).digest()).hexdigest()\n",
    "  d=dig[:8]\n",
    "#print(\"csum =\",d)\n",
    "  aa=a0+str.upper(d)\n",
    "  ba=bytearray.fromhex(aa)\n",
    "#BITCOIN_ALPHABET = b'123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n",
    "  b58=base58g.encode(ba)\n",
    "#print(len(b58),\"WIF:\", b58)\n",
    "  return b58 \n",
    "\n",
    "def sql3adr(adr):    #zapros k baze\n",
    "  cur.execute('select count(*) as a from \"tx1srt\" where field1=\\\"'+adr+'\\\"')\n",
    "  return cur.fetchone()[0]\n",
    "\n",
    "dcon = sqlite3.connect('C:/btc/sqlite/new1st.db')    #(\"E:/btc/new1st.db\")\n",
    "cur = dcon.cursor()\n",
    "\n",
    "print(\"SQL:\"+str(sql3adr(\"ZZZZZzZUuzhRdzHpQUdm4dztK1UuCcw4\")),\"<--test\")\n",
    "\n",
    "t1=time.time()\n",
    "print(time.ctime(t1))\n",
    "limi=150000                   ##########  LIMIT  ############\n",
    "\n",
    "print(\"Limit=\",limi)\n",
    "\n",
    "for i in range(limi):    # 5 minut - 15000; 360 min - 500000.  its 25-50 hash/sec\n",
    "  privkey=random_key()\n",
    "  pubkey = privtopub(privkey) \n",
    "  addr = pubtoaddr(pubkey) \n",
    "  a=addr[1:]\n",
    "  if sql3adr(a)>0:\n",
    "    print(\"FOUND!!!\", addr, wif(privkey))\n",
    "    break\n",
    "\n",
    "print(\"SQL:\"+str(sql3adr(a)))\n",
    "print(sql3adr(a),addr,pub)\n",
    "print(privkey)\n",
    "\n",
    "t2=time.time()\n",
    "print(time.ctime(t2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "808f87a03784f64a3a26f97e6d2464dac64eaf2e645a8c661f6e6a72c896408e10\n",
      "bytearray(b'\\x80\\x8f\\x87\\xa07\\x84\\xf6J:&\\xf9~m$d\\xda\\xc6N\\xaf.dZ\\x8cf\\x1fnjr\\xc8\\x96@\\x8e\\x10')\n",
      "csum = 6c22861b\n",
      "51 WIF: 5JuVrgGjXHSN1c7z19mgCw5Wj9FQJDaaeeXsFm91J4a1CGq4wDt\n"
     ]
    }
   ],
   "source": [
    "#https://en.bitcoin.it/wiki/Wallet_import_format\n",
    "from hashlib import sha256\n",
    "import base58g \n",
    "priv=privkey #=input()  #\"0C28FCA386C7A227600B2FE50B7CAE11EC86D3BF1FBE471BE89827E19D72AA1D\"\n",
    "a0=\"80\"+priv #+\"01\"         #bytes(priv,encoding='ascii')\n",
    "print(a0)\n",
    "a1=bytearray.fromhex(a0)\n",
    "print(a1)\n",
    "dig = sha256(sha256(a1).digest()).hexdigest()\n",
    "d=dig[:8]\n",
    "print(\"csum =\",d)\n",
    "aa=a0+str.upper(d)\n",
    "ba=bytearray.fromhex(aa)\n",
    "#BITCOIN_ALPHABET = b'123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n",
    "b58=base58g.encode(ba)\n",
    "print(len(b58),\"WIF:\", b58)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "127emaoUmXBnYZ2N69doGp82DorQ4RNrgb 51\n"
     ]
    }
   ],
   "source": [
    "w1=b'5HueCGU8rMjxEXxiPuD5BDku4MkFqeZyd4dZ1jvhTVqvbTLvyTJ'\n",
    "base58.b58decode(w1)\n",
    "print(addr, len(w1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Thu Nov 14 18:49:54 2019\n",
      "True\n",
      "Thu Nov 14 18:49:57 2019\n"
     ]
    }
   ],
   "source": [
    "#seek time in flat text file\n",
    "#Thu Nov 14 18:36:07 2019 -False- Thu Nov 14 18:44:35 2019\n",
    "print(time.ctime(time.time()))\n",
    "for i in range(1):\n",
    "  with open('c:/btc/tx1srt.txt') as f:\n",
    "    p=any('2HddUDLhRP2F8JjpKYeKaDxxt5wUvx5nq' in line for line in f)\n",
    "print(p)    \n",
    "print(time.ctime(time.time()))"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
